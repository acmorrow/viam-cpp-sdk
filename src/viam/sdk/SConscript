Import(['env'])

env = env.Clone()

env.SharedLibrary(
    target='viamsdk',
    source=[
        'registry/registry.cpp',
        'common/linear_algebra.cpp',
        'common/pose.cpp',
        'common/proto_type.cpp',
        'common/utils.cpp',
        'common/world_state.cpp',
        'components/base/base.cpp',
        'components/base/client.cpp',
        'components/base/server.cpp',
        'components/board/board.cpp',
        'components/board/client.cpp',
        'components/board/server.cpp',
        'components/camera/camera.cpp',
        'components/camera/client.cpp',
        'components/camera/server.cpp',
        'components/component.cpp',
        'components/encoder/client.cpp',
        'components/encoder/encoder.cpp',
        'components/encoder/server.cpp',
        'components/generic/client.cpp',
        'components/generic/generic.cpp',
        'components/generic/server.cpp',
        'components/motor/motor.cpp',
        'components/motor/client.cpp',
        'components/motor/server.cpp',
        'config/resource.cpp',
        'module/handler_map.cpp',
        'module/module.cpp',
        'module/service.cpp',
        'referenceframe/frame.cpp',
        'resource/resource.cpp',
        'resource/resource_api.cpp',
        'resource/resource_manager.cpp',
        'resource/resource_server_base.cpp',
        'resource/resource_type.cpp',
        'robot/client.cpp',
        'robot/service.cpp',
        'rpc/dial.cpp',
        'rpc/server.cpp',
        'services/mlmodel/client.cpp',
        'services/mlmodel/mlmodel.cpp',
        'services/mlmodel/private/proto.cpp',
        'services/mlmodel/server.cpp',
        'services/motion/client.cpp',
        'services/motion/motion.cpp',
        'services/motion/server.cpp',
        'services/service.cpp',
        'spatialmath/geometry.cpp',
        'spatialmath/orientation_types.cpp',
        'spatialmath/orientation.cpp',
    ],
    LIBS=[
        'absl_cord',
        'absl_cord_internal',
        'absl_cordz_info',
        'absl_hash',
        'absl_log_internal_check_op',
        'absl_log_internal_message',
        'absl_log_internal_nullguard',
        'boost_log-mt',
        'gpr',
        'grpc',
        'grpc++',
        'grpc++_reflection',
        'protobuf',
        'viam_rust_utils',
        'viamapi',
    ]
)
