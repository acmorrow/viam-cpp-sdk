// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app/model/v1/model.proto

#include "app/model/v1/model.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace viam {
namespace app {
namespace model {
namespace v1 {
PROTOBUF_CONSTEXPR FileData::FileData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FileDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileDataDefaultTypeInternal() {}
  union {
    FileData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileDataDefaultTypeInternal _FileData_default_instance_;
PROTOBUF_CONSTEXPR UploadMetadata::UploadMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.associated_dataset_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadMetadataDefaultTypeInternal() {}
  union {
    UploadMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadMetadataDefaultTypeInternal _UploadMetadata_default_instance_;
PROTOBUF_CONSTEXPR UploadRequest::UploadRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.upload_packet_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct UploadRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadRequestDefaultTypeInternal() {}
  union {
    UploadRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadRequestDefaultTypeInternal _UploadRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteMetadata::DeleteMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteMetadataDefaultTypeInternal() {}
  union {
    DeleteMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteMetadataDefaultTypeInternal _DeleteMetadata_default_instance_;
PROTOBUF_CONSTEXPR DeleteRequest::DeleteRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metadata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRequestDefaultTypeInternal() {}
  union {
    DeleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRequestDefaultTypeInternal _DeleteRequest_default_instance_;
PROTOBUF_CONSTEXPR DeployMetadata::DeployMetadata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployMetadataDefaultTypeInternal() {}
  union {
    DeployMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployMetadataDefaultTypeInternal _DeployMetadata_default_instance_;
PROTOBUF_CONSTEXPR DeployRequest::DeployRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metadata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployRequestDefaultTypeInternal() {}
  union {
    DeployRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployRequestDefaultTypeInternal _DeployRequest_default_instance_;
PROTOBUF_CONSTEXPR UploadResponse::UploadResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UploadResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UploadResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UploadResponseDefaultTypeInternal() {}
  union {
    UploadResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UploadResponseDefaultTypeInternal _UploadResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteResponse::DeleteResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteResponseDefaultTypeInternal() {}
  union {
    DeleteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteResponseDefaultTypeInternal _DeleteResponse_default_instance_;
PROTOBUF_CONSTEXPR DeployResponse::DeployResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployResponseDefaultTypeInternal() {}
  union {
    DeployResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployResponseDefaultTypeInternal _DeployResponse_default_instance_;
PROTOBUF_CONSTEXPR SyncedModel::SyncedModel(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.org_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.model_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.associated_dataset_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.blob_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sync_time_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncedModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncedModelDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncedModelDefaultTypeInternal() {}
  union {
    SyncedModel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncedModelDefaultTypeInternal _SyncedModel_default_instance_;
}  // namespace v1
}  // namespace model
}  // namespace app
}  // namespace viam
static ::_pb::Metadata file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[11];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_app_2fmodel_2fv1_2fmodel_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_app_2fmodel_2fv1_2fmodel_2eproto = nullptr;

const uint32_t TableStruct_app_2fmodel_2fv1_2fmodel_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::FileData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::FileData, _impl_.data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadMetadata, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadMetadata, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadMetadata, _impl_.associated_dataset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadRequest, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadRequest, _impl_.upload_packet_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteMetadata, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteMetadata, _impl_.model_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteRequest, _impl_.metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployMetadata, _impl_.model_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployRequest, _impl_.metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::UploadResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeleteResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::DeployResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::SyncedModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::SyncedModel, _impl_.org_id_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::SyncedModel, _impl_.model_name_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::SyncedModel, _impl_.associated_dataset_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::SyncedModel, _impl_.blob_path_),
  PROTOBUF_FIELD_OFFSET(::viam::app::model::v1::SyncedModel, _impl_.sync_time_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::viam::app::model::v1::FileData)},
  { 7, -1, -1, sizeof(::viam::app::model::v1::UploadMetadata)},
  { 16, -1, -1, sizeof(::viam::app::model::v1::UploadRequest)},
  { 25, -1, -1, sizeof(::viam::app::model::v1::DeleteMetadata)},
  { 33, -1, -1, sizeof(::viam::app::model::v1::DeleteRequest)},
  { 40, -1, -1, sizeof(::viam::app::model::v1::DeployMetadata)},
  { 47, -1, -1, sizeof(::viam::app::model::v1::DeployRequest)},
  { 54, -1, -1, sizeof(::viam::app::model::v1::UploadResponse)},
  { 62, -1, -1, sizeof(::viam::app::model::v1::DeleteResponse)},
  { 70, -1, -1, sizeof(::viam::app::model::v1::DeployResponse)},
  { 78, -1, -1, sizeof(::viam::app::model::v1::SyncedModel)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::viam::app::model::v1::_FileData_default_instance_._instance,
  &::viam::app::model::v1::_UploadMetadata_default_instance_._instance,
  &::viam::app::model::v1::_UploadRequest_default_instance_._instance,
  &::viam::app::model::v1::_DeleteMetadata_default_instance_._instance,
  &::viam::app::model::v1::_DeleteRequest_default_instance_._instance,
  &::viam::app::model::v1::_DeployMetadata_default_instance_._instance,
  &::viam::app::model::v1::_DeployRequest_default_instance_._instance,
  &::viam::app::model::v1::_UploadResponse_default_instance_._instance,
  &::viam::app::model::v1::_DeleteResponse_default_instance_._instance,
  &::viam::app::model::v1::_DeployResponse_default_instance_._instance,
  &::viam::app::model::v1::_SyncedModel_default_instance_._instance,
};

const char descriptor_table_protodef_app_2fmodel_2fv1_2fmodel_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030app/model/v1/model.proto\022\021viam.app.mod"
  "el.v1\032\037google/protobuf/timestamp.proto\"\036"
  "\n\010FileData\022\022\n\004data\030\001 \001(\014R\004data\"u\n\016Upload"
  "Metadata\022\025\n\006org_id\030\001 \001(\tR\005orgId\022\035\n\nmodel"
  "_name\030\002 \001(\tR\tmodelName\022-\n\022associated_dat"
  "aset\030\003 \001(\tR\021associatedDataset\"\245\001\n\rUpload"
  "Request\022\?\n\010metadata\030\001 \001(\0132!.viam.app.mod"
  "el.v1.UploadMetadataH\000R\010metadata\022B\n\rfile"
  "_contents\030\002 \001(\0132\033.viam.app.model.v1.File"
  "DataH\000R\014fileContentsB\017\n\rupload_packet\"F\n"
  "\016DeleteMetadata\022\025\n\006org_id\030\001 \001(\tR\005orgId\022\035"
  "\n\nmodel_name\030\002 \001(\tR\tmodelName\"N\n\rDeleteR"
  "equest\022=\n\010metadata\030\001 \001(\0132!.viam.app.mode"
  "l.v1.DeleteMetadataR\010metadata\"/\n\016DeployM"
  "etadata\022\035\n\nmodel_name\030\001 \001(\tR\tmodelName\"N"
  "\n\rDeployRequest\022=\n\010metadata\030\001 \001(\0132!.viam"
  ".app.model.v1.DeployMetadataR\010metadata\"]"
  "\n\016UploadResponse\022\030\n\007message\030\001 \001(\tR\007messa"
  "ge\0221\n\006status\030\002 \001(\0162\031.viam.app.model.v1.S"
  "tatusR\006status\"]\n\016DeleteResponse\022\030\n\007messa"
  "ge\030\001 \001(\tR\007message\0221\n\006status\030\002 \001(\0162\031.viam"
  ".app.model.v1.StatusR\006status\"]\n\016DeployRe"
  "sponse\022\030\n\007message\030\001 \001(\tR\007message\0221\n\006stat"
  "us\030\002 \001(\0162\031.viam.app.model.v1.StatusR\006sta"
  "tus\"\310\001\n\013SyncedModel\022\025\n\006org_id\030\001 \001(\tR\005org"
  "Id\022\035\n\nmodel_name\030\002 \001(\tR\tmodelName\022-\n\022ass"
  "ociated_dataset\030\003 \001(\tR\021associatedDataset"
  "\022\033\n\tblob_path\030\004 \001(\tR\010blobPath\0227\n\tsync_ti"
  "me\030\005 \001(\0132\032.google.protobuf.TimestampR\010sy"
  "ncTime*+\n\006Status\022\017\n\013UNSPECIFIED\020\000\022\010\n\004FAI"
  "L\020\001\022\006\n\002OK\020\0022\375\001\n\014ModelService\022O\n\006Upload\022 "
  ".viam.app.model.v1.UploadRequest\032!.viam."
  "app.model.v1.UploadResponse(\001\022M\n\006Delete\022"
  " .viam.app.model.v1.DeleteRequest\032!.viam"
  ".app.model.v1.DeleteResponse\022M\n\006Deploy\022 "
  ".viam.app.model.v1.DeployRequest\032!.viam."
  "app.model.v1.DeployResponseB\036Z\034go.viam.c"
  "om/api/app/model/v1b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto = {
    false, false, 1507, descriptor_table_protodef_app_2fmodel_2fv1_2fmodel_2eproto,
    "app/model/v1/model.proto",
    &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once, descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_deps, 1, 11,
    schemas, file_default_instances, TableStruct_app_2fmodel_2fv1_2fmodel_2eproto::offsets,
    file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto, file_level_enum_descriptors_app_2fmodel_2fv1_2fmodel_2eproto,
    file_level_service_descriptors_app_2fmodel_2fv1_2fmodel_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter() {
  return &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_app_2fmodel_2fv1_2fmodel_2eproto(&descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto);
namespace viam {
namespace app {
namespace model {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto);
  return file_level_enum_descriptors_app_2fmodel_2fv1_2fmodel_2eproto[0];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class FileData::_Internal {
 public:
};

FileData::FileData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.FileData)
}
FileData::FileData(const FileData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FileData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.FileData)
}

inline void FileData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FileData::~FileData() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.FileData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FileData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}

void FileData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FileData::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.FileData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1 [json_name = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.FileData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.FileData)
  return target;
}

size_t FileData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.FileData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1 [json_name = "data"];
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FileData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileData::GetClassData() const { return &_class_data_; }


void FileData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FileData*>(&to_msg);
  auto& from = static_cast<const FileData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.FileData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileData::CopyFrom(const FileData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.FileData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileData::IsInitialized() const {
  return true;
}

void FileData::InternalSwap(FileData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_, lhs_arena,
      &other->_impl_.data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FileData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[0]);
}

// ===================================================================

class UploadMetadata::_Internal {
 public:
};

UploadMetadata::UploadMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.UploadMetadata)
}
UploadMetadata::UploadMetadata(const UploadMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.associated_dataset_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    _this->_impl_.org_id_.Set(from._internal_org_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.associated_dataset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.associated_dataset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_associated_dataset().empty()) {
    _this->_impl_.associated_dataset_.Set(from._internal_associated_dataset(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.UploadMetadata)
}

inline void UploadMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.associated_dataset_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.associated_dataset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.associated_dataset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadMetadata::~UploadMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.UploadMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.org_id_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.associated_dataset_.Destroy();
}

void UploadMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.UploadMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.associated_dataset_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.UploadMetadata.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2 [json_name = "modelName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.UploadMetadata.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string associated_dataset = 3 [json_name = "associatedDataset"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_associated_dataset();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.UploadMetadata.associated_dataset"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.UploadMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.UploadMetadata.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string model_name = 2 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.UploadMetadata.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // string associated_dataset = 3 [json_name = "associatedDataset"];
  if (!this->_internal_associated_dataset().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_associated_dataset().data(), static_cast<int>(this->_internal_associated_dataset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.UploadMetadata.associated_dataset");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_associated_dataset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.UploadMetadata)
  return target;
}

size_t UploadMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.UploadMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string model_name = 2 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string associated_dataset = 3 [json_name = "associatedDataset"];
  if (!this->_internal_associated_dataset().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_associated_dataset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadMetadata::GetClassData() const { return &_class_data_; }


void UploadMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadMetadata*>(&to_msg);
  auto& from = static_cast<const UploadMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.UploadMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_associated_dataset().empty()) {
    _this->_internal_set_associated_dataset(from._internal_associated_dataset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadMetadata::CopyFrom(const UploadMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.UploadMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadMetadata::IsInitialized() const {
  return true;
}

void UploadMetadata::InternalSwap(UploadMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.org_id_, lhs_arena,
      &other->_impl_.org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.associated_dataset_, lhs_arena,
      &other->_impl_.associated_dataset_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[1]);
}

// ===================================================================

class UploadRequest::_Internal {
 public:
  static const ::viam::app::model::v1::UploadMetadata& metadata(const UploadRequest* msg);
  static const ::viam::app::model::v1::FileData& file_contents(const UploadRequest* msg);
};

const ::viam::app::model::v1::UploadMetadata&
UploadRequest::_Internal::metadata(const UploadRequest* msg) {
  return *msg->_impl_.upload_packet_.metadata_;
}
const ::viam::app::model::v1::FileData&
UploadRequest::_Internal::file_contents(const UploadRequest* msg) {
  return *msg->_impl_.upload_packet_.file_contents_;
}
void UploadRequest::set_allocated_metadata(::viam::app::model::v1::UploadMetadata* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_upload_packet();
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(metadata);
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    set_has_metadata();
    _impl_.upload_packet_.metadata_ = metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.model.v1.UploadRequest.metadata)
}
void UploadRequest::set_allocated_file_contents(::viam::app::model::v1::FileData* file_contents) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_upload_packet();
  if (file_contents) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(file_contents);
    if (message_arena != submessage_arena) {
      file_contents = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file_contents, submessage_arena);
    }
    set_has_file_contents();
    _impl_.upload_packet_.file_contents_ = file_contents;
  }
  // @@protoc_insertion_point(field_set_allocated:viam.app.model.v1.UploadRequest.file_contents)
}
UploadRequest::UploadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.UploadRequest)
}
UploadRequest::UploadRequest(const UploadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.upload_packet_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_upload_packet();
  switch (from.upload_packet_case()) {
    case kMetadata: {
      _this->_internal_mutable_metadata()->::viam::app::model::v1::UploadMetadata::MergeFrom(
          from._internal_metadata());
      break;
    }
    case kFileContents: {
      _this->_internal_mutable_file_contents()->::viam::app::model::v1::FileData::MergeFrom(
          from._internal_file_contents());
      break;
    }
    case UPLOAD_PACKET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.UploadRequest)
}

inline void UploadRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.upload_packet_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_upload_packet();
}

UploadRequest::~UploadRequest() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.UploadRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_upload_packet()) {
    clear_upload_packet();
  }
}

void UploadRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadRequest::clear_upload_packet() {
// @@protoc_insertion_point(one_of_clear_start:viam.app.model.v1.UploadRequest)
  switch (upload_packet_case()) {
    case kMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.upload_packet_.metadata_;
      }
      break;
    }
    case kFileContents: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.upload_packet_.file_contents_;
      }
      break;
    }
    case UPLOAD_PACKET_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = UPLOAD_PACKET_NOT_SET;
}


void UploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.UploadRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_upload_packet();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.model.v1.UploadMetadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .viam.app.model.v1.FileData file_contents = 2 [json_name = "fileContents"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_file_contents(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.UploadRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.model.v1.UploadMetadata metadata = 1 [json_name = "metadata"];
  if (_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // .viam.app.model.v1.FileData file_contents = 2 [json_name = "fileContents"];
  if (_internal_has_file_contents()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::file_contents(this),
        _Internal::file_contents(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.UploadRequest)
  return target;
}

size_t UploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.UploadRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (upload_packet_case()) {
    // .viam.app.model.v1.UploadMetadata metadata = 1 [json_name = "metadata"];
    case kMetadata: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.upload_packet_.metadata_);
      break;
    }
    // .viam.app.model.v1.FileData file_contents = 2 [json_name = "fileContents"];
    case kFileContents: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.upload_packet_.file_contents_);
      break;
    }
    case UPLOAD_PACKET_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadRequest::GetClassData() const { return &_class_data_; }


void UploadRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadRequest*>(&to_msg);
  auto& from = static_cast<const UploadRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.UploadRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.upload_packet_case()) {
    case kMetadata: {
      _this->_internal_mutable_metadata()->::viam::app::model::v1::UploadMetadata::MergeFrom(
          from._internal_metadata());
      break;
    }
    case kFileContents: {
      _this->_internal_mutable_file_contents()->::viam::app::model::v1::FileData::MergeFrom(
          from._internal_file_contents());
      break;
    }
    case UPLOAD_PACKET_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadRequest::CopyFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.UploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadRequest::IsInitialized() const {
  return true;
}

void UploadRequest::InternalSwap(UploadRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.upload_packet_, other->_impl_.upload_packet_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[2]);
}

// ===================================================================

class DeleteMetadata::_Internal {
 public:
};

DeleteMetadata::DeleteMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.DeleteMetadata)
}
DeleteMetadata::DeleteMetadata(const DeleteMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    _this->_impl_.org_id_.Set(from._internal_org_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.DeleteMetadata)
}

inline void DeleteMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteMetadata::~DeleteMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.DeleteMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.org_id_.Destroy();
  _impl_.model_name_.Destroy();
}

void DeleteMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.DeleteMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.DeleteMetadata.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2 [json_name = "modelName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.DeleteMetadata.model_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.DeleteMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.DeleteMetadata.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string model_name = 2 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.DeleteMetadata.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.DeleteMetadata)
  return target;
}

size_t DeleteMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.DeleteMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string model_name = 2 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteMetadata::GetClassData() const { return &_class_data_; }


void DeleteMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteMetadata*>(&to_msg);
  auto& from = static_cast<const DeleteMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.DeleteMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteMetadata::CopyFrom(const DeleteMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.DeleteMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteMetadata::IsInitialized() const {
  return true;
}

void DeleteMetadata::InternalSwap(DeleteMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.org_id_, lhs_arena,
      &other->_impl_.org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[3]);
}

// ===================================================================

class DeleteRequest::_Internal {
 public:
  static const ::viam::app::model::v1::DeleteMetadata& metadata(const DeleteRequest* msg);
};

const ::viam::app::model::v1::DeleteMetadata&
DeleteRequest::_Internal::metadata(const DeleteRequest* msg) {
  return *msg->_impl_.metadata_;
}
DeleteRequest::DeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    _this->_impl_.metadata_ = new ::viam::app::model::v1::DeleteMetadata(*from._impl_.metadata_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.DeleteRequest)
}

inline void DeleteRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.DeleteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metadata_;
}

void DeleteRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.DeleteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.model.v1.DeleteMetadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.DeleteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.model.v1.DeleteMetadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.DeleteRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.model.v1.DeleteMetadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRequest::GetClassData() const { return &_class_data_; }


void DeleteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteRequest*>(&to_msg);
  auto& from = static_cast<const DeleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _this->_internal_mutable_metadata()->::viam::app::model::v1::DeleteMetadata::MergeFrom(
        from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[4]);
}

// ===================================================================

class DeployMetadata::_Internal {
 public:
};

DeployMetadata::DeployMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.DeployMetadata)
}
DeployMetadata::DeployMetadata(const DeployMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployMetadata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.DeployMetadata)
}

inline void DeployMetadata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeployMetadata::~DeployMetadata() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.DeployMetadata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.model_name_.Destroy();
}

void DeployMetadata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.DeployMetadata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.model_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployMetadata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1 [json_name = "modelName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.DeployMetadata.model_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployMetadata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.DeployMetadata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.DeployMetadata.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.DeployMetadata)
  return target;
}

size_t DeployMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.DeployMetadata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model_name = 1 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployMetadata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployMetadata::GetClassData() const { return &_class_data_; }


void DeployMetadata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployMetadata*>(&to_msg);
  auto& from = static_cast<const DeployMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.DeployMetadata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployMetadata::CopyFrom(const DeployMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.DeployMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployMetadata::IsInitialized() const {
  return true;
}

void DeployMetadata::InternalSwap(DeployMetadata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[5]);
}

// ===================================================================

class DeployRequest::_Internal {
 public:
  static const ::viam::app::model::v1::DeployMetadata& metadata(const DeployRequest* msg);
};

const ::viam::app::model::v1::DeployMetadata&
DeployRequest::_Internal::metadata(const DeployRequest* msg) {
  return *msg->_impl_.metadata_;
}
DeployRequest::DeployRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.DeployRequest)
}
DeployRequest::DeployRequest(const DeployRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metadata()) {
    _this->_impl_.metadata_ = new ::viam::app::model::v1::DeployMetadata(*from._impl_.metadata_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.DeployRequest)
}

inline void DeployRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeployRequest::~DeployRequest() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.DeployRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metadata_;
}

void DeployRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.DeployRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metadata_ != nullptr) {
    delete _impl_.metadata_;
  }
  _impl_.metadata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .viam.app.model.v1.DeployMetadata metadata = 1 [json_name = "metadata"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.DeployRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .viam.app.model.v1.DeployMetadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.DeployRequest)
  return target;
}

size_t DeployRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.DeployRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .viam.app.model.v1.DeployMetadata metadata = 1 [json_name = "metadata"];
  if (this->_internal_has_metadata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metadata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployRequest::GetClassData() const { return &_class_data_; }


void DeployRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployRequest*>(&to_msg);
  auto& from = static_cast<const DeployRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.DeployRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metadata()) {
    _this->_internal_mutable_metadata()->::viam::app::model::v1::DeployMetadata::MergeFrom(
        from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployRequest::CopyFrom(const DeployRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.DeployRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployRequest::IsInitialized() const {
  return true;
}

void DeployRequest::InternalSwap(DeployRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metadata_, other->_impl_.metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[6]);
}

// ===================================================================

class UploadResponse::_Internal {
 public:
};

UploadResponse::UploadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.UploadResponse)
}
UploadResponse::UploadResponse(const UploadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UploadResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.UploadResponse)
}

inline void UploadResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadResponse::~UploadResponse() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.UploadResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UploadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void UploadResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.UploadResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1 [json_name = "message"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.UploadResponse.message"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.model.v1.Status status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::viam::app::model::v1::Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.UploadResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.UploadResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  // .viam.app.model.v1.Status status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.UploadResponse)
  return target;
}

size_t UploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.UploadResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .viam.app.model.v1.Status status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UploadResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadResponse::GetClassData() const { return &_class_data_; }


void UploadResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UploadResponse*>(&to_msg);
  auto& from = static_cast<const UploadResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.UploadResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadResponse::CopyFrom(const UploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.UploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadResponse::IsInitialized() const {
  return true;
}

void UploadResponse::InternalSwap(UploadResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[7]);
}

// ===================================================================

class DeleteResponse::_Internal {
 public:
};

DeleteResponse::DeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.DeleteResponse)
}
DeleteResponse::DeleteResponse(const DeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.DeleteResponse)
}

inline void DeleteResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteResponse::~DeleteResponse() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.DeleteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void DeleteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.DeleteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1 [json_name = "message"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.DeleteResponse.message"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.model.v1.Status status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::viam::app::model::v1::Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.DeleteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.DeleteResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  // .viam.app.model.v1.Status status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.DeleteResponse)
  return target;
}

size_t DeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.DeleteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .viam.app.model.v1.Status status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteResponse::GetClassData() const { return &_class_data_; }


void DeleteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteResponse*>(&to_msg);
  auto& from = static_cast<const DeleteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteResponse::CopyFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponse::IsInitialized() const {
  return true;
}

void DeleteResponse::InternalSwap(DeleteResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[8]);
}

// ===================================================================

class DeployResponse::_Internal {
 public:
};

DeployResponse::DeployResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.DeployResponse)
}
DeployResponse::DeployResponse(const DeployResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.DeployResponse)
}

inline void DeployResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeployResponse::~DeployResponse() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.DeployResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void DeployResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.DeployResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1 [json_name = "message"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.DeployResponse.message"));
        } else
          goto handle_unusual;
        continue;
      // .viam.app.model.v1.Status status = 2 [json_name = "status"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::viam::app::model::v1::Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.DeployResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.DeployResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  // .viam.app.model.v1.Status status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.DeployResponse)
  return target;
}

size_t DeployResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.DeployResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .viam.app.model.v1.Status status = 2 [json_name = "status"];
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployResponse::GetClassData() const { return &_class_data_; }


void DeployResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployResponse*>(&to_msg);
  auto& from = static_cast<const DeployResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.DeployResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployResponse::CopyFrom(const DeployResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.DeployResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployResponse::IsInitialized() const {
  return true;
}

void DeployResponse::InternalSwap(DeployResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[9]);
}

// ===================================================================

class SyncedModel::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& sync_time(const SyncedModel* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SyncedModel::_Internal::sync_time(const SyncedModel* msg) {
  return *msg->_impl_.sync_time_;
}
void SyncedModel::clear_sync_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.sync_time_ != nullptr) {
    delete _impl_.sync_time_;
  }
  _impl_.sync_time_ = nullptr;
}
SyncedModel::SyncedModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:viam.app.model.v1.SyncedModel)
}
SyncedModel::SyncedModel(const SyncedModel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncedModel* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.associated_dataset_){}
    , decltype(_impl_.blob_path_){}
    , decltype(_impl_.sync_time_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_org_id().empty()) {
    _this->_impl_.org_id_.Set(from._internal_org_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    _this->_impl_.model_name_.Set(from._internal_model_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.associated_dataset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.associated_dataset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_associated_dataset().empty()) {
    _this->_impl_.associated_dataset_.Set(from._internal_associated_dataset(), 
      _this->GetArenaForAllocation());
  }
  _impl_.blob_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.blob_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_blob_path().empty()) {
    _this->_impl_.blob_path_.Set(from._internal_blob_path(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_sync_time()) {
    _this->_impl_.sync_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.sync_time_);
  }
  // @@protoc_insertion_point(copy_constructor:viam.app.model.v1.SyncedModel)
}

inline void SyncedModel::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.org_id_){}
    , decltype(_impl_.model_name_){}
    , decltype(_impl_.associated_dataset_){}
    , decltype(_impl_.blob_path_){}
    , decltype(_impl_.sync_time_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.org_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.org_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.model_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.model_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.associated_dataset_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.associated_dataset_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.blob_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.blob_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncedModel::~SyncedModel() {
  // @@protoc_insertion_point(destructor:viam.app.model.v1.SyncedModel)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncedModel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.org_id_.Destroy();
  _impl_.model_name_.Destroy();
  _impl_.associated_dataset_.Destroy();
  _impl_.blob_path_.Destroy();
  if (this != internal_default_instance()) delete _impl_.sync_time_;
}

void SyncedModel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncedModel::Clear() {
// @@protoc_insertion_point(message_clear_start:viam.app.model.v1.SyncedModel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.org_id_.ClearToEmpty();
  _impl_.model_name_.ClearToEmpty();
  _impl_.associated_dataset_.ClearToEmpty();
  _impl_.blob_path_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.sync_time_ != nullptr) {
    delete _impl_.sync_time_;
  }
  _impl_.sync_time_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncedModel::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string org_id = 1 [json_name = "orgId"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_org_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.SyncedModel.org_id"));
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2 [json_name = "modelName"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.SyncedModel.model_name"));
        } else
          goto handle_unusual;
        continue;
      // string associated_dataset = 3 [json_name = "associatedDataset"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_associated_dataset();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.SyncedModel.associated_dataset"));
        } else
          goto handle_unusual;
        continue;
      // string blob_path = 4 [json_name = "blobPath"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_blob_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "viam.app.model.v1.SyncedModel.blob_path"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp sync_time = 5 [json_name = "syncTime"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sync_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncedModel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viam.app.model.v1.SyncedModel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_org_id().data(), static_cast<int>(this->_internal_org_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.SyncedModel.org_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_org_id(), target);
  }

  // string model_name = 2 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.SyncedModel.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // string associated_dataset = 3 [json_name = "associatedDataset"];
  if (!this->_internal_associated_dataset().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_associated_dataset().data(), static_cast<int>(this->_internal_associated_dataset().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.SyncedModel.associated_dataset");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_associated_dataset(), target);
  }

  // string blob_path = 4 [json_name = "blobPath"];
  if (!this->_internal_blob_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_blob_path().data(), static_cast<int>(this->_internal_blob_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viam.app.model.v1.SyncedModel.blob_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_blob_path(), target);
  }

  // .google.protobuf.Timestamp sync_time = 5 [json_name = "syncTime"];
  if (this->_internal_has_sync_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::sync_time(this),
        _Internal::sync_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viam.app.model.v1.SyncedModel)
  return target;
}

size_t SyncedModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viam.app.model.v1.SyncedModel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string org_id = 1 [json_name = "orgId"];
  if (!this->_internal_org_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_org_id());
  }

  // string model_name = 2 [json_name = "modelName"];
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string associated_dataset = 3 [json_name = "associatedDataset"];
  if (!this->_internal_associated_dataset().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_associated_dataset());
  }

  // string blob_path = 4 [json_name = "blobPath"];
  if (!this->_internal_blob_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_blob_path());
  }

  // .google.protobuf.Timestamp sync_time = 5 [json_name = "syncTime"];
  if (this->_internal_has_sync_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sync_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncedModel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncedModel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncedModel::GetClassData() const { return &_class_data_; }


void SyncedModel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncedModel*>(&to_msg);
  auto& from = static_cast<const SyncedModel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:viam.app.model.v1.SyncedModel)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_org_id().empty()) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_model_name().empty()) {
    _this->_internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_associated_dataset().empty()) {
    _this->_internal_set_associated_dataset(from._internal_associated_dataset());
  }
  if (!from._internal_blob_path().empty()) {
    _this->_internal_set_blob_path(from._internal_blob_path());
  }
  if (from._internal_has_sync_time()) {
    _this->_internal_mutable_sync_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_sync_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncedModel::CopyFrom(const SyncedModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viam.app.model.v1.SyncedModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncedModel::IsInitialized() const {
  return true;
}

void SyncedModel::InternalSwap(SyncedModel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.org_id_, lhs_arena,
      &other->_impl_.org_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.model_name_, lhs_arena,
      &other->_impl_.model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.associated_dataset_, lhs_arena,
      &other->_impl_.associated_dataset_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.blob_path_, lhs_arena,
      &other->_impl_.blob_path_, rhs_arena
  );
  swap(_impl_.sync_time_, other->_impl_.sync_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncedModel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_getter, &descriptor_table_app_2fmodel_2fv1_2fmodel_2eproto_once,
      file_level_metadata_app_2fmodel_2fv1_2fmodel_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace model
}  // namespace app
}  // namespace viam
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::FileData*
Arena::CreateMaybeMessage< ::viam::app::model::v1::FileData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::FileData >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::UploadMetadata*
Arena::CreateMaybeMessage< ::viam::app::model::v1::UploadMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::UploadMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::UploadRequest*
Arena::CreateMaybeMessage< ::viam::app::model::v1::UploadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::UploadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::DeleteMetadata*
Arena::CreateMaybeMessage< ::viam::app::model::v1::DeleteMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::DeleteMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::DeleteRequest*
Arena::CreateMaybeMessage< ::viam::app::model::v1::DeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::DeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::DeployMetadata*
Arena::CreateMaybeMessage< ::viam::app::model::v1::DeployMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::DeployMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::DeployRequest*
Arena::CreateMaybeMessage< ::viam::app::model::v1::DeployRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::DeployRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::UploadResponse*
Arena::CreateMaybeMessage< ::viam::app::model::v1::UploadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::UploadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::DeleteResponse*
Arena::CreateMaybeMessage< ::viam::app::model::v1::DeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::DeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::DeployResponse*
Arena::CreateMaybeMessage< ::viam::app::model::v1::DeployResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::DeployResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::viam::app::model::v1::SyncedModel*
Arena::CreateMaybeMessage< ::viam::app::model::v1::SyncedModel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::viam::app::model::v1::SyncedModel >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
